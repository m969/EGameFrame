
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 1.0.0.N5QiaB7OYXj4lD8fhDMdYkgN2eybcm1QsyBH685ktPo=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using FlatSharp;
using FlatSharp.Attributes;
namespace EGameFrame
{
    namespace Message
    {
        [FlatBufferEnum(typeof(System.SByte))]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public enum Fruit : System.SByte
        {
            Apples = (sbyte)(0),
            Pears = (sbyte)(1),
            Bananas = (sbyte)(2),
        }

        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBarContainer : object
        {
            partial void OnInitialized();
            public FooBarContainer()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBarContainer(FooBarContainer source)
            {
                checked
                {
                    this.list = source.list?.Select(x => x != null ? new EGameFrame.Message.FooBar(x) : null).ToList();
                    this.initialized = source.initialized;
                    this.fruit = source.fruit;
                    this.location = source.location;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual IList<global::EGameFrame.Message.FooBar> list { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Boolean initialized { get; set; }
            [FlatBufferItem(2)]
            public virtual global::EGameFrame.Message.Fruit fruit { get; set; }
            [FlatBufferItem(3)]
            public virtual System.String location { get; set; }
            public static ISerializer<EGameFrame.Message.FooBarContainer> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.FooBarContainer

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.FooBarContainer>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.FooBarContainer root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_6b28f010915246e2bda92f12e4a6b662(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.FooBarContainer root)
                {
                    checked
                    {
                        return GetMaxSizeOf_6b28f010915246e2bda92f12e4a6b662(root);
                    }
                }

                public EGameFrame.Message.FooBarContainer Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_6b28f010915246e2bda92f12e4a6b662(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_6b28f010915246e2bda92f12e4a6b662(EGameFrame.Message.FooBarContainer value)
                {
                    checked
                    {

                        int runningSum = 23 + 13;
                        var index0Value = value.list;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_7ae179ec0bab49efa69597581bd636d6(index0Value);
                        }
                        var index3Value = value.location;

                        if (!object.ReferenceEquals(index3Value, null))
                        {
                            runningSum += GetMaxSizeOf_cc8040f35bee41da9e499862f46d9ec7(index3Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBarContainer Read_6b28f010915246e2bda92f12e4a6b662<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_905ab47cd8804e91a70f0bbcab8a3413<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_905ab47cd8804e91a70f0bbcab8a3413<TInputBuffer> : EGameFrame.Message.FooBarContainer where TInputBuffer : IInputBuffer
                {



                    public tableReader_905ab47cd8804e91a70f0bbcab8a3413(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.Collections.Generic.IList<EGameFrame.Message.FooBar> __index0;
                    public override System.Collections.Generic.IList<EGameFrame.Message.FooBar> list
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Collections.Generic.IList<EGameFrame.Message.FooBar> __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Collections.Generic.IList<EGameFrame.Message.FooBar>);
                            }
                            else
                            {
                                return Read_7ae179ec0bab49efa69597581bd636d6(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Boolean __index1;
                    public override System.Boolean initialized
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Boolean __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Boolean);
                            }
                            else
                            {
                                return Read_de9f3bfa0f874135915c8588724074b6(buffer, absoluteLocation);
                            }
                        }
                    }

                    private EGameFrame.Message.Fruit __index2;
                    public override EGameFrame.Message.Fruit fruit
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Fruit __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Fruit);
                            }
                            else
                            {
                                return Read_200ab3e5df6543d4a8ec121dea4443d0(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index3;
                    public override System.String location
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_cc8040f35bee41da9e499862f46d9ec7(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_6b28f010915246e2bda92f12e4a6b662<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBarContainer value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(20, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.list;
                        var index0Offset = 0;
                        if (index0Value != default(System.Collections.Generic.IList<EGameFrame.Message.FooBar>))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }

                        var index1Value = value.initialized;
                        var index1Offset = 0;
                        if (index1Value != default(System.Boolean))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 1;

                        }

                        var index2Value = value.fruit;
                        var index2Offset = 0;
                        if (index2Value != default(EGameFrame.Message.Fruit))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 1;

                        }

                        var index3Value = value.location;
                        var index3Offset = 0;
                        if (index3Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 20 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_7ae179ec0bab49efa69597581bd636d6(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_de9f3bfa0f874135915c8588724074b6(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_200ab3e5df6543d4a8ec121dea4443d0(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_cc8040f35bee41da9e499862f46d9ec7(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_7ae179ec0bab49efa69597581bd636d6(System.Collections.Generic.IList<EGameFrame.Message.FooBar> value)
                {
                    checked
                    {

                        int length = value.Count;
                        int runningSum = 7 + 7;
                        for (int i = 0; i < length; ++i)
                        {
                            var itemTemp = value[i];
                            SerializationHelpers.EnsureNonNull(itemTemp);
                            runningSum += GetMaxSizeOf_21e2bcbecbb94c6f942af4b90603717f(itemTemp);
                        }
                        return runningSum;
                    }
                }

                private static System.Collections.Generic.IList<EGameFrame.Message.FooBar> Read_7ae179ec0bab49efa69597581bd636d6<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (new FlatBufferVector_e3fc5cf2b2b7448aa1008b4d131f5b7c<TInputBuffer>(
                            buffer,
                            offset + buffer.ReadUOffset(offset),
                            4)).FlatBufferVectorToList();
                    }
                }

                public sealed class FlatBufferVector_e3fc5cf2b2b7448aa1008b4d131f5b7c<TInputBuffer> : FlatBufferVector<EGameFrame.Message.FooBar, TInputBuffer>
                    where TInputBuffer : IInputBuffer
                {
                    public FlatBufferVector_e3fc5cf2b2b7448aa1008b4d131f5b7c(
                        TInputBuffer memory,
                        int offset,
                        int itemSize) : base(memory, offset, itemSize)
                    {
                        checked
                        {
                        }
                    }

                    protected override EGameFrame.Message.FooBar ParseItem(TInputBuffer memory, int offset)
                    {
                        checked
                        {
                            return Read_21e2bcbecbb94c6f942af4b90603717f(memory, offset);
                        }
                    }
                }



                private static void WriteInlineValueOf_7ae179ec0bab49efa69597581bd636d6<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Collections.Generic.IList<EGameFrame.Message.FooBar> value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int count = value.Count;
                        int vectorOffset = context.AllocateVector(4, count, 4);
                        spanWriter.WriteUOffset(span, offset, vectorOffset, context);
                        spanWriter.WriteInt(span, count, vectorOffset, context);
                        vectorOffset += sizeof(int);
                        for (int i = 0; i < count; ++i)
                        {
                            var current = value[i];
                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_21e2bcbecbb94c6f942af4b90603717f(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                }

                private static int GetMaxSizeOf_21e2bcbecbb94c6f942af4b90603717f(EGameFrame.Message.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_cc8040f35bee41da9e499862f46d9ec7(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBar Read_21e2bcbecbb94c6f942af4b90603717f<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_234b2492e5c44f4f9b7d90955102446a<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_234b2492e5c44f4f9b7d90955102446a<TInputBuffer> : EGameFrame.Message.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_234b2492e5c44f4f9b7d90955102446a(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Bar __index0;
                    public override EGameFrame.Message.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Bar);
                            }
                            else
                            {
                                return Read_fc676df3d3cc407fb02c67292b3ac7f8(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_cc8040f35bee41da9e499862f46d9ec7(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_e8950d15ff4c458188cae2400505dd12(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_44d9fe56541f4c8d83b3b933738a7a1a(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_21e2bcbecbb94c6f942af4b90603717f<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(EGameFrame.Message.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_fc676df3d3cc407fb02c67292b3ac7f8(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_cc8040f35bee41da9e499862f46d9ec7(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_e8950d15ff4c458188cae2400505dd12(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_44d9fe56541f4c8d83b3b933738a7a1a(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_fc676df3d3cc407fb02c67292b3ac7f8(EGameFrame.Message.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static EGameFrame.Message.Bar Read_fc676df3d3cc407fb02c67292b3ac7f8<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_d2cea3a91dce465e86610dd0a23a3259<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_d2cea3a91dce465e86610dd0a23a3259<TInputBuffer> : EGameFrame.Message.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_d2cea3a91dce465e86610dd0a23a3259(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Foo __index0;
                    public override EGameFrame.Message.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_a45c2528cecc4b8884d6c2bb1962cadd(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_160da7d3088d4aaaa1c41f11ebd5feb8(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_4b65feeae2594f04b88411c1b4f14585(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_ee3e33bd0328411da51c1d1705424105(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_fc676df3d3cc407fb02c67292b3ac7f8<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_a45c2528cecc4b8884d6c2bb1962cadd(spanWriter, span, (value.parent ?? new EGameFrame.Message.Foo()), (0 + offset), context);
                        WriteInlineValueOf_160da7d3088d4aaaa1c41f11ebd5feb8(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_4b65feeae2594f04b88411c1b4f14585(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_ee3e33bd0328411da51c1d1705424105(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_a45c2528cecc4b8884d6c2bb1962cadd(EGameFrame.Message.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static EGameFrame.Message.Foo Read_a45c2528cecc4b8884d6c2bb1962cadd<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_a5ad1c6bece1443d8d1be109728e20dd<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_a5ad1c6bece1443d8d1be109728e20dd<TInputBuffer> : EGameFrame.Message.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_a5ad1c6bece1443d8d1be109728e20dd(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_06dd9ceab94b4b1cb4fa69df4ffb6e99(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_8af696d92c784c6189a344a8d3dbf5f4(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_7c1fcd19a9404ca3acd76554bea52933(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_5b08ce93caf94c0eb59209a42ec5e50a(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_a45c2528cecc4b8884d6c2bb1962cadd<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_06dd9ceab94b4b1cb4fa69df4ffb6e99(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_8af696d92c784c6189a344a8d3dbf5f4(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_7c1fcd19a9404ca3acd76554bea52933(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_5b08ce93caf94c0eb59209a42ec5e50a(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_06dd9ceab94b4b1cb4fa69df4ffb6e99(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_06dd9ceab94b4b1cb4fa69df4ffb6e99<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_06dd9ceab94b4b1cb4fa69df4ffb6e99<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_8af696d92c784c6189a344a8d3dbf5f4(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_8af696d92c784c6189a344a8d3dbf5f4<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_8af696d92c784c6189a344a8d3dbf5f4<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_7c1fcd19a9404ca3acd76554bea52933(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_7c1fcd19a9404ca3acd76554bea52933<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_7c1fcd19a9404ca3acd76554bea52933<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_5b08ce93caf94c0eb59209a42ec5e50a(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_5b08ce93caf94c0eb59209a42ec5e50a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_5b08ce93caf94c0eb59209a42ec5e50a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_160da7d3088d4aaaa1c41f11ebd5feb8(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_160da7d3088d4aaaa1c41f11ebd5feb8<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_160da7d3088d4aaaa1c41f11ebd5feb8<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_4b65feeae2594f04b88411c1b4f14585(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_4b65feeae2594f04b88411c1b4f14585<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_4b65feeae2594f04b88411c1b4f14585<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_ee3e33bd0328411da51c1d1705424105(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_ee3e33bd0328411da51c1d1705424105<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_ee3e33bd0328411da51c1d1705424105<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_cc8040f35bee41da9e499862f46d9ec7(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_cc8040f35bee41da9e499862f46d9ec7<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_cc8040f35bee41da9e499862f46d9ec7<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_e8950d15ff4c458188cae2400505dd12(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_e8950d15ff4c458188cae2400505dd12<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_e8950d15ff4c458188cae2400505dd12<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_44d9fe56541f4c8d83b3b933738a7a1a(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_44d9fe56541f4c8d83b3b933738a7a1a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_44d9fe56541f4c8d83b3b933738a7a1a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_de9f3bfa0f874135915c8588724074b6(System.Boolean value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Boolean Read_de9f3bfa0f874135915c8588724074b6<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadBool(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_de9f3bfa0f874135915c8588724074b6<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Boolean value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteBool(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_200ab3e5df6543d4a8ec121dea4443d0(EGameFrame.Message.Fruit value)
                {
                    checked
                    {
                        return GetMaxSizeOf_7c1fcd19a9404ca3acd76554bea52933((System.SByte)value);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static EGameFrame.Message.Fruit Read_200ab3e5df6543d4a8ec121dea4443d0<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (EGameFrame.Message.Fruit)Read_7c1fcd19a9404ca3acd76554bea52933(buffer, offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_200ab3e5df6543d4a8ec121dea4443d0<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Fruit value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_7c1fcd19a9404ca3acd76554bea52933(spanWriter, span, (System.SByte)value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBar : object
        {
            partial void OnInitialized();
            public FooBar()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBar(FooBar source)
            {
                checked
                {
                    this.sibling = source.sibling != null ? new EGameFrame.Message.Bar(source.sibling) : null;
                    this.name = source.name;
                    this.rating = source.rating;
                    this.postfix = source.postfix;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::EGameFrame.Message.Bar sibling { get; set; }
            [FlatBufferItem(1)]
            public virtual System.String name { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Double rating { get; set; }
            [FlatBufferItem(3)]
            public virtual System.Byte postfix { get; set; }
            public static ISerializer<EGameFrame.Message.FooBar> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.FooBar

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.FooBar>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.FooBar root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_46f20999e2e7448291252a69ba3582ad(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.FooBar root)
                {
                    checked
                    {
                        return GetMaxSizeOf_46f20999e2e7448291252a69ba3582ad(root);
                    }
                }

                public EGameFrame.Message.FooBar Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_46f20999e2e7448291252a69ba3582ad(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_46f20999e2e7448291252a69ba3582ad(EGameFrame.Message.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_c383bc9a9a27438bbe5aff9a9d102034(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBar Read_46f20999e2e7448291252a69ba3582ad<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_8ccd6088d8674939bda3fb37adae3eb9<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_8ccd6088d8674939bda3fb37adae3eb9<TInputBuffer> : EGameFrame.Message.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_8ccd6088d8674939bda3fb37adae3eb9(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Bar __index0;
                    public override EGameFrame.Message.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Bar);
                            }
                            else
                            {
                                return Read_52f1407740194a35bb1b9d3fb965d1be(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_c383bc9a9a27438bbe5aff9a9d102034(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_898cc1819a8d4448bfbd85f9ee09431e(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_b9be1d9d4e944635a9bd92c9fc1a5f86(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_46f20999e2e7448291252a69ba3582ad<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(EGameFrame.Message.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_52f1407740194a35bb1b9d3fb965d1be(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_c383bc9a9a27438bbe5aff9a9d102034(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_898cc1819a8d4448bfbd85f9ee09431e(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_b9be1d9d4e944635a9bd92c9fc1a5f86(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_52f1407740194a35bb1b9d3fb965d1be(EGameFrame.Message.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static EGameFrame.Message.Bar Read_52f1407740194a35bb1b9d3fb965d1be<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_c8e9b827c705444d93a72c23ed006db1<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_c8e9b827c705444d93a72c23ed006db1<TInputBuffer> : EGameFrame.Message.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_c8e9b827c705444d93a72c23ed006db1(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Foo __index0;
                    public override EGameFrame.Message.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_2c84dc013e5e462497577b430a9ada1b(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_943a025a43124fab866a13826feabef0(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_206158ff80e14e099faa6bfa2858fe71(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_cc90d4ba1eed4fc3a37ead3131666348(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_52f1407740194a35bb1b9d3fb965d1be<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_2c84dc013e5e462497577b430a9ada1b(spanWriter, span, (value.parent ?? new EGameFrame.Message.Foo()), (0 + offset), context);
                        WriteInlineValueOf_943a025a43124fab866a13826feabef0(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_206158ff80e14e099faa6bfa2858fe71(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_cc90d4ba1eed4fc3a37ead3131666348(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_2c84dc013e5e462497577b430a9ada1b(EGameFrame.Message.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static EGameFrame.Message.Foo Read_2c84dc013e5e462497577b430a9ada1b<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_a5614baf102f40398208a1a5897890db<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_a5614baf102f40398208a1a5897890db<TInputBuffer> : EGameFrame.Message.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_a5614baf102f40398208a1a5897890db(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_c53694497aee490a8b94171446f7d98d(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_0c56c195b19443fd882a709cd9bc7fca(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_32a7296f2cbe4dc9a327a7b8f6490e9f(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_8c2a800beb664adbb31045cf2f77946b(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_2c84dc013e5e462497577b430a9ada1b<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_c53694497aee490a8b94171446f7d98d(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_0c56c195b19443fd882a709cd9bc7fca(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_32a7296f2cbe4dc9a327a7b8f6490e9f(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_8c2a800beb664adbb31045cf2f77946b(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_c53694497aee490a8b94171446f7d98d(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_c53694497aee490a8b94171446f7d98d<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_c53694497aee490a8b94171446f7d98d<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_0c56c195b19443fd882a709cd9bc7fca(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_0c56c195b19443fd882a709cd9bc7fca<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_0c56c195b19443fd882a709cd9bc7fca<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_32a7296f2cbe4dc9a327a7b8f6490e9f(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_32a7296f2cbe4dc9a327a7b8f6490e9f<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_32a7296f2cbe4dc9a327a7b8f6490e9f<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_8c2a800beb664adbb31045cf2f77946b(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_8c2a800beb664adbb31045cf2f77946b<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_8c2a800beb664adbb31045cf2f77946b<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_943a025a43124fab866a13826feabef0(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_943a025a43124fab866a13826feabef0<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_943a025a43124fab866a13826feabef0<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_206158ff80e14e099faa6bfa2858fe71(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_206158ff80e14e099faa6bfa2858fe71<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_206158ff80e14e099faa6bfa2858fe71<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_cc90d4ba1eed4fc3a37ead3131666348(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_cc90d4ba1eed4fc3a37ead3131666348<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_cc90d4ba1eed4fc3a37ead3131666348<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_c383bc9a9a27438bbe5aff9a9d102034(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_c383bc9a9a27438bbe5aff9a9d102034<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_c383bc9a9a27438bbe5aff9a9d102034<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_898cc1819a8d4448bfbd85f9ee09431e(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_898cc1819a8d4448bfbd85f9ee09431e<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_898cc1819a8d4448bfbd85f9ee09431e<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_b9be1d9d4e944635a9bd92c9fc1a5f86(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_b9be1d9d4e944635a9bd92c9fc1a5f86<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_b9be1d9d4e944635a9bd92c9fc1a5f86<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class OtherTable : object
        {
            partial void OnInitialized();
            public OtherTable()
            {
                checked
                { this.OnInitialized(); }
            }

            public OtherTable(OtherTable source)
            {
                checked
                {
                    this.name = source.name;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.String name { get; set; }
            public static ISerializer<EGameFrame.Message.OtherTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.OtherTable

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.Lazy)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.OtherTable>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.OtherTable root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_2c67fef766dc47c1b97ac4d5daaa66d4(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.OtherTable root)
                {
                    checked
                    {
                        return GetMaxSizeOf_2c67fef766dc47c1b97ac4d5daaa66d4(root);
                    }
                }

                public EGameFrame.Message.OtherTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_2c67fef766dc47c1b97ac4d5daaa66d4(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_2c67fef766dc47c1b97ac4d5daaa66d4(EGameFrame.Message.OtherTable value)
                {
                    checked
                    {

                        int runningSum = 14 + 7;
                        var index0Value = value.name;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_5ab354d4fe694fd2b76f6685d451d11b(index0Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.OtherTable Read_2c67fef766dc47c1b97ac4d5daaa66d4<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_9978785d3748490a89f8d460ee1dade4<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_9978785d3748490a89f8d460ee1dade4<TInputBuffer> : EGameFrame.Message.OtherTable where TInputBuffer : IInputBuffer
                {
                    private readonly TInputBuffer buffer;
                    private readonly int offset;

                    public tableReader_9978785d3748490a89f8d460ee1dade4(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.buffer = buffer;
                            this.offset = offset;
                        }
                    }

                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return __ReadIndex0Value(this.buffer, this.offset); }
                        }

                        set
                        {
                            checked
                            { throw new NotMutableException(); }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_5ab354d4fe694fd2b76f6685d451d11b(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_2c67fef766dc47c1b97ac4d5daaa66d4<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.OtherTable value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(11, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[6];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.name;
                        var index0Offset = 0;
                        if (index0Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 11 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_5ab354d4fe694fd2b76f6685d451d11b(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_5ab354d4fe694fd2b76f6685d451d11b(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_5ab354d4fe694fd2b76f6685d451d11b<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_5ab354d4fe694fd2b76f6685d451d11b<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Foo : object
        {
            partial void OnInitialized();
            public Foo()
            {
                checked
                { this.OnInitialized(); }
            }

            public Foo(Foo source)
            {
                checked
                {
                    this.id = source.id;
                    this.count = source.count;
                    this.prefix = source.prefix;
                    this.length = source.length;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.UInt64 id { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int16 count { get; set; }
            [FlatBufferItem(2)]
            public virtual System.SByte prefix { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt32 length { get; set; }
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Bar : object
        {
            partial void OnInitialized();
            public Bar()
            {
                checked
                { this.OnInitialized(); }
            }

            public Bar(Bar source)
            {
                checked
                {
                    this.parent = source.parent != null ? new EGameFrame.Message.Foo(source.parent) : null;
                    this.time = source.time;
                    this.ratio = source.ratio;
                    this.size = source.size;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::EGameFrame.Message.Foo parent { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int32 time { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Single ratio { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt16 size { get; set; }
        }
    }
}
