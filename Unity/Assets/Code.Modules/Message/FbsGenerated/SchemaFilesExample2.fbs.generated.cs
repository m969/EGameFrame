
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 1.0.0.71yrbk8UpizG/NTIJBapSzSiAW19S6BHrZQjqaMd1RY=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using FlatSharp;
using FlatSharp.Attributes;
namespace Samples
{
    namespace SchemaFilesExample2
    {
        [FlatBufferEnum(typeof(System.SByte))]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public enum Fruit : System.SByte
        {
            Apples = (sbyte)(0),
            Pears = (sbyte)(1),
            Bananas = (sbyte)(2),
        }

        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBarContainer : object
        {
            partial void OnInitialized();
            public FooBarContainer()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBarContainer(FooBarContainer source)
            {
                checked
                {
                    this.list = source.list?.Select(x => x != null ? new Samples.SchemaFilesExample2.FooBar(x) : null).ToList();
                    this.initialized = source.initialized;
                    this.fruit = source.fruit;
                    this.location = source.location;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual IList<global::Samples.SchemaFilesExample2.FooBar> list { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Boolean initialized { get; set; }
            [FlatBufferItem(2)]
            public virtual global::Samples.SchemaFilesExample2.Fruit fruit { get; set; }
            [FlatBufferItem(3)]
            public virtual System.String location { get; set; }
            public static ISerializer<Samples.SchemaFilesExample2.FooBarContainer> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for Samples.SchemaFilesExample2.FooBarContainer

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<Samples.SchemaFilesExample2.FooBarContainer>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, Samples.SchemaFilesExample2.FooBarContainer root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_215b4b6095dc49fe9293ef3cab906210(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(Samples.SchemaFilesExample2.FooBarContainer root)
                {
                    checked
                    {
                        return GetMaxSizeOf_215b4b6095dc49fe9293ef3cab906210(root);
                    }
                }

                public Samples.SchemaFilesExample2.FooBarContainer Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_215b4b6095dc49fe9293ef3cab906210(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_215b4b6095dc49fe9293ef3cab906210(Samples.SchemaFilesExample2.FooBarContainer value)
                {
                    checked
                    {

                        int runningSum = 23 + 13;
                        var index0Value = value.list;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_bc5a651240bf48f583cbdebf0072e87c(index0Value);
                        }
                        var index3Value = value.location;

                        if (!object.ReferenceEquals(index3Value, null))
                        {
                            runningSum += GetMaxSizeOf_e75df56bb765408eb57e1ab1af251d31(index3Value);
                        };
                        return runningSum;

                    }
                }

                private static Samples.SchemaFilesExample2.FooBarContainer Read_215b4b6095dc49fe9293ef3cab906210<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_60e78096898d4405b8e529a22073f9d5<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_60e78096898d4405b8e529a22073f9d5<TInputBuffer> : Samples.SchemaFilesExample2.FooBarContainer where TInputBuffer : IInputBuffer
                {



                    public tableReader_60e78096898d4405b8e529a22073f9d5(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> __index0;
                    public override System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> list
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>);
                            }
                            else
                            {
                                return Read_bc5a651240bf48f583cbdebf0072e87c(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Boolean __index1;
                    public override System.Boolean initialized
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Boolean __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Boolean);
                            }
                            else
                            {
                                return Read_00f02038d8ac438a9a5669931fd275b6(buffer, absoluteLocation);
                            }
                        }
                    }

                    private Samples.SchemaFilesExample2.Fruit __index2;
                    public override Samples.SchemaFilesExample2.Fruit fruit
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static Samples.SchemaFilesExample2.Fruit __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(Samples.SchemaFilesExample2.Fruit);
                            }
                            else
                            {
                                return Read_58993c691a4142d0b45c6045402d027d(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index3;
                    public override System.String location
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_e75df56bb765408eb57e1ab1af251d31(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_215b4b6095dc49fe9293ef3cab906210<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.FooBarContainer value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(20, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.list;
                        var index0Offset = 0;
                        if (index0Value != default(System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar>))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }

                        var index1Value = value.initialized;
                        var index1Offset = 0;
                        if (index1Value != default(System.Boolean))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 1;

                        }

                        var index2Value = value.fruit;
                        var index2Offset = 0;
                        if (index2Value != default(Samples.SchemaFilesExample2.Fruit))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 1;

                        }

                        var index3Value = value.location;
                        var index3Offset = 0;
                        if (index3Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 20 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_bc5a651240bf48f583cbdebf0072e87c(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_00f02038d8ac438a9a5669931fd275b6(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_58993c691a4142d0b45c6045402d027d(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_e75df56bb765408eb57e1ab1af251d31(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_bc5a651240bf48f583cbdebf0072e87c(System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> value)
                {
                    checked
                    {

                        int length = value.Count;
                        int runningSum = 7 + 7;
                        for (int i = 0; i < length; ++i)
                        {
                            var itemTemp = value[i];
                            SerializationHelpers.EnsureNonNull(itemTemp);
                            runningSum += GetMaxSizeOf_e85169222afa4341993d17133477a72e(itemTemp);
                        }
                        return runningSum;
                    }
                }

                private static System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> Read_bc5a651240bf48f583cbdebf0072e87c<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (new FlatBufferVector_8d7d2f3206734b5aaa948be96d7b4930<TInputBuffer>(
                            buffer,
                            offset + buffer.ReadUOffset(offset),
                            4)).FlatBufferVectorToList();
                    }
                }

                public sealed class FlatBufferVector_8d7d2f3206734b5aaa948be96d7b4930<TInputBuffer> : FlatBufferVector<Samples.SchemaFilesExample2.FooBar, TInputBuffer>
                    where TInputBuffer : IInputBuffer
                {
                    public FlatBufferVector_8d7d2f3206734b5aaa948be96d7b4930(
                        TInputBuffer memory,
                        int offset,
                        int itemSize) : base(memory, offset, itemSize)
                    {
                        checked
                        {
                        }
                    }

                    protected override Samples.SchemaFilesExample2.FooBar ParseItem(TInputBuffer memory, int offset)
                    {
                        checked
                        {
                            return Read_e85169222afa4341993d17133477a72e(memory, offset);
                        }
                    }
                }



                private static void WriteInlineValueOf_bc5a651240bf48f583cbdebf0072e87c<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Collections.Generic.IList<Samples.SchemaFilesExample2.FooBar> value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int count = value.Count;
                        int vectorOffset = context.AllocateVector(4, count, 4);
                        spanWriter.WriteUOffset(span, offset, vectorOffset, context);
                        spanWriter.WriteInt(span, count, vectorOffset, context);
                        vectorOffset += sizeof(int);
                        for (int i = 0; i < count; ++i)
                        {
                            var current = value[i];
                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_e85169222afa4341993d17133477a72e(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                }

                private static int GetMaxSizeOf_e85169222afa4341993d17133477a72e(Samples.SchemaFilesExample2.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_e75df56bb765408eb57e1ab1af251d31(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static Samples.SchemaFilesExample2.FooBar Read_e85169222afa4341993d17133477a72e<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_031b6e80e7324a82b2d4c3a0b820fa2e<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_031b6e80e7324a82b2d4c3a0b820fa2e<TInputBuffer> : Samples.SchemaFilesExample2.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_031b6e80e7324a82b2d4c3a0b820fa2e(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private Samples.SchemaFilesExample2.Bar __index0;
                    public override Samples.SchemaFilesExample2.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static Samples.SchemaFilesExample2.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(Samples.SchemaFilesExample2.Bar);
                            }
                            else
                            {
                                return Read_43d2bbe2f6114ec0add2e95471434300(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_e75df56bb765408eb57e1ab1af251d31(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_eaeda8a840ec423b9ff005bda2261718(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_1448e5827bfa4c7cb6d0c1cc1f2525ef(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_e85169222afa4341993d17133477a72e<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(Samples.SchemaFilesExample2.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_43d2bbe2f6114ec0add2e95471434300(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_e75df56bb765408eb57e1ab1af251d31(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_eaeda8a840ec423b9ff005bda2261718(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_1448e5827bfa4c7cb6d0c1cc1f2525ef(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_43d2bbe2f6114ec0add2e95471434300(Samples.SchemaFilesExample2.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static Samples.SchemaFilesExample2.Bar Read_43d2bbe2f6114ec0add2e95471434300<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_8f324104e4d9499d8e8a5ab06a3587e6<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_8f324104e4d9499d8e8a5ab06a3587e6<TInputBuffer> : Samples.SchemaFilesExample2.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_8f324104e4d9499d8e8a5ab06a3587e6(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private Samples.SchemaFilesExample2.Foo __index0;
                    public override Samples.SchemaFilesExample2.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static Samples.SchemaFilesExample2.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_6eff0c0ca3944e22aa492f66f09fe6fc(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_3461e0b50c5946b4b892e21e05dca76a(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_1735568821df4250b998e42641e7695c(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_749cadaecafc402b9f1b1745d48312f7(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_43d2bbe2f6114ec0add2e95471434300<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_6eff0c0ca3944e22aa492f66f09fe6fc(spanWriter, span, (value.parent ?? new Samples.SchemaFilesExample2.Foo()), (0 + offset), context);
                        WriteInlineValueOf_3461e0b50c5946b4b892e21e05dca76a(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_1735568821df4250b998e42641e7695c(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_749cadaecafc402b9f1b1745d48312f7(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_6eff0c0ca3944e22aa492f66f09fe6fc(Samples.SchemaFilesExample2.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static Samples.SchemaFilesExample2.Foo Read_6eff0c0ca3944e22aa492f66f09fe6fc<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_64e7206aa75143f5968402fdee93310b<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_64e7206aa75143f5968402fdee93310b<TInputBuffer> : Samples.SchemaFilesExample2.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_64e7206aa75143f5968402fdee93310b(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_5aa8f38e3e5a4f8a86e022701aa1711d(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_a879c27289834c62aa775024b2a2c21c(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_8fe64090be444304aef1e7028c41c821(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_1bd0c90b41f546d48fc7d43e746b72ce(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_6eff0c0ca3944e22aa492f66f09fe6fc<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_5aa8f38e3e5a4f8a86e022701aa1711d(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_a879c27289834c62aa775024b2a2c21c(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_8fe64090be444304aef1e7028c41c821(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_1bd0c90b41f546d48fc7d43e746b72ce(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_5aa8f38e3e5a4f8a86e022701aa1711d(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_5aa8f38e3e5a4f8a86e022701aa1711d<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_5aa8f38e3e5a4f8a86e022701aa1711d<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_a879c27289834c62aa775024b2a2c21c(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_a879c27289834c62aa775024b2a2c21c<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_a879c27289834c62aa775024b2a2c21c<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_8fe64090be444304aef1e7028c41c821(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_8fe64090be444304aef1e7028c41c821<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_8fe64090be444304aef1e7028c41c821<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_1bd0c90b41f546d48fc7d43e746b72ce(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_1bd0c90b41f546d48fc7d43e746b72ce<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_1bd0c90b41f546d48fc7d43e746b72ce<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_3461e0b50c5946b4b892e21e05dca76a(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_3461e0b50c5946b4b892e21e05dca76a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_3461e0b50c5946b4b892e21e05dca76a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_1735568821df4250b998e42641e7695c(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_1735568821df4250b998e42641e7695c<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_1735568821df4250b998e42641e7695c<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_749cadaecafc402b9f1b1745d48312f7(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_749cadaecafc402b9f1b1745d48312f7<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_749cadaecafc402b9f1b1745d48312f7<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_e75df56bb765408eb57e1ab1af251d31(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_e75df56bb765408eb57e1ab1af251d31<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_e75df56bb765408eb57e1ab1af251d31<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_eaeda8a840ec423b9ff005bda2261718(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_eaeda8a840ec423b9ff005bda2261718<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_eaeda8a840ec423b9ff005bda2261718<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_1448e5827bfa4c7cb6d0c1cc1f2525ef(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_1448e5827bfa4c7cb6d0c1cc1f2525ef<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_1448e5827bfa4c7cb6d0c1cc1f2525ef<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_00f02038d8ac438a9a5669931fd275b6(System.Boolean value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Boolean Read_00f02038d8ac438a9a5669931fd275b6<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadBool(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_00f02038d8ac438a9a5669931fd275b6<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Boolean value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteBool(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_58993c691a4142d0b45c6045402d027d(Samples.SchemaFilesExample2.Fruit value)
                {
                    checked
                    {
                        return GetMaxSizeOf_8fe64090be444304aef1e7028c41c821((System.SByte)value);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static Samples.SchemaFilesExample2.Fruit Read_58993c691a4142d0b45c6045402d027d<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (Samples.SchemaFilesExample2.Fruit)Read_8fe64090be444304aef1e7028c41c821(buffer, offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_58993c691a4142d0b45c6045402d027d<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.Fruit value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_8fe64090be444304aef1e7028c41c821(spanWriter, span, (System.SByte)value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBar : object
        {
            partial void OnInitialized();
            public FooBar()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBar(FooBar source)
            {
                checked
                {
                    this.sibling = source.sibling != null ? new Samples.SchemaFilesExample2.Bar(source.sibling) : null;
                    this.name = source.name;
                    this.rating = source.rating;
                    this.postfix = source.postfix;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::Samples.SchemaFilesExample2.Bar sibling { get; set; }
            [FlatBufferItem(1)]
            public virtual System.String name { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Double rating { get; set; }
            [FlatBufferItem(3)]
            public virtual System.Byte postfix { get; set; }
            public static ISerializer<Samples.SchemaFilesExample2.FooBar> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for Samples.SchemaFilesExample2.FooBar

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<Samples.SchemaFilesExample2.FooBar>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, Samples.SchemaFilesExample2.FooBar root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_8e9825f245fd4ba98191d250beba055d(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(Samples.SchemaFilesExample2.FooBar root)
                {
                    checked
                    {
                        return GetMaxSizeOf_8e9825f245fd4ba98191d250beba055d(root);
                    }
                }

                public Samples.SchemaFilesExample2.FooBar Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_8e9825f245fd4ba98191d250beba055d(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_8e9825f245fd4ba98191d250beba055d(Samples.SchemaFilesExample2.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_1a4c75bb8bfb4c63a6e9d84c3e8dc05f(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static Samples.SchemaFilesExample2.FooBar Read_8e9825f245fd4ba98191d250beba055d<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_32800abd65854209a1eb6151e70bceb3<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_32800abd65854209a1eb6151e70bceb3<TInputBuffer> : Samples.SchemaFilesExample2.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_32800abd65854209a1eb6151e70bceb3(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private Samples.SchemaFilesExample2.Bar __index0;
                    public override Samples.SchemaFilesExample2.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static Samples.SchemaFilesExample2.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(Samples.SchemaFilesExample2.Bar);
                            }
                            else
                            {
                                return Read_99fee01f22fc4329bdf512d5d65ba089(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_1a4c75bb8bfb4c63a6e9d84c3e8dc05f(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_31f37087a375493e801e250e42713596(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_83160e072f734b45ade89e8402418963(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_8e9825f245fd4ba98191d250beba055d<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(Samples.SchemaFilesExample2.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_99fee01f22fc4329bdf512d5d65ba089(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_1a4c75bb8bfb4c63a6e9d84c3e8dc05f(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_31f37087a375493e801e250e42713596(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_83160e072f734b45ade89e8402418963(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_99fee01f22fc4329bdf512d5d65ba089(Samples.SchemaFilesExample2.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static Samples.SchemaFilesExample2.Bar Read_99fee01f22fc4329bdf512d5d65ba089<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_77eafed7d45141b29f519ba7a6fac197<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_77eafed7d45141b29f519ba7a6fac197<TInputBuffer> : Samples.SchemaFilesExample2.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_77eafed7d45141b29f519ba7a6fac197(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private Samples.SchemaFilesExample2.Foo __index0;
                    public override Samples.SchemaFilesExample2.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static Samples.SchemaFilesExample2.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_fde6d2b80c024a9b9645846ab14ae77a(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_60579c0ecbd74a48b3ad7fbd1c7c3a08(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_f54511127094482fb8bfb7abf683c642(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_fc094035e99a490ca5ab1b07ce04cf04(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_99fee01f22fc4329bdf512d5d65ba089<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_fde6d2b80c024a9b9645846ab14ae77a(spanWriter, span, (value.parent ?? new Samples.SchemaFilesExample2.Foo()), (0 + offset), context);
                        WriteInlineValueOf_60579c0ecbd74a48b3ad7fbd1c7c3a08(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_f54511127094482fb8bfb7abf683c642(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_fc094035e99a490ca5ab1b07ce04cf04(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_fde6d2b80c024a9b9645846ab14ae77a(Samples.SchemaFilesExample2.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static Samples.SchemaFilesExample2.Foo Read_fde6d2b80c024a9b9645846ab14ae77a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_3360d2c0fec4407b97ffcc5f3b6e413e<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_3360d2c0fec4407b97ffcc5f3b6e413e<TInputBuffer> : Samples.SchemaFilesExample2.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_3360d2c0fec4407b97ffcc5f3b6e413e(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_6d4801bd9d4547a0b816c6db1c5ef6e5(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_f88a4d5a1cd049d893c3fed56ec1e82f(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_361c28d7afad48628b7a1276e5e1fd52(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_afd4576160004b3a981a6783c7774f9a(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_fde6d2b80c024a9b9645846ab14ae77a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_6d4801bd9d4547a0b816c6db1c5ef6e5(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_f88a4d5a1cd049d893c3fed56ec1e82f(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_361c28d7afad48628b7a1276e5e1fd52(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_afd4576160004b3a981a6783c7774f9a(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_6d4801bd9d4547a0b816c6db1c5ef6e5(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_6d4801bd9d4547a0b816c6db1c5ef6e5<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_6d4801bd9d4547a0b816c6db1c5ef6e5<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_f88a4d5a1cd049d893c3fed56ec1e82f(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_f88a4d5a1cd049d893c3fed56ec1e82f<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_f88a4d5a1cd049d893c3fed56ec1e82f<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_361c28d7afad48628b7a1276e5e1fd52(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_361c28d7afad48628b7a1276e5e1fd52<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_361c28d7afad48628b7a1276e5e1fd52<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_afd4576160004b3a981a6783c7774f9a(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_afd4576160004b3a981a6783c7774f9a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_afd4576160004b3a981a6783c7774f9a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_60579c0ecbd74a48b3ad7fbd1c7c3a08(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_60579c0ecbd74a48b3ad7fbd1c7c3a08<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_60579c0ecbd74a48b3ad7fbd1c7c3a08<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_f54511127094482fb8bfb7abf683c642(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_f54511127094482fb8bfb7abf683c642<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_f54511127094482fb8bfb7abf683c642<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_fc094035e99a490ca5ab1b07ce04cf04(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_fc094035e99a490ca5ab1b07ce04cf04<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_fc094035e99a490ca5ab1b07ce04cf04<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_1a4c75bb8bfb4c63a6e9d84c3e8dc05f(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_1a4c75bb8bfb4c63a6e9d84c3e8dc05f<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_1a4c75bb8bfb4c63a6e9d84c3e8dc05f<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_31f37087a375493e801e250e42713596(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_31f37087a375493e801e250e42713596<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_31f37087a375493e801e250e42713596<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_83160e072f734b45ade89e8402418963(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_83160e072f734b45ade89e8402418963<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_83160e072f734b45ade89e8402418963<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class OtherTable : object
        {
            partial void OnInitialized();
            public OtherTable()
            {
                checked
                { this.OnInitialized(); }
            }

            public OtherTable(OtherTable source)
            {
                checked
                {
                    this.name = source.name;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.String name { get; set; }
            public static ISerializer<Samples.SchemaFilesExample2.OtherTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for Samples.SchemaFilesExample2.OtherTable

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.Lazy)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<Samples.SchemaFilesExample2.OtherTable>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, Samples.SchemaFilesExample2.OtherTable root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_8846452bd65e4887bb67850e47795ed3(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(Samples.SchemaFilesExample2.OtherTable root)
                {
                    checked
                    {
                        return GetMaxSizeOf_8846452bd65e4887bb67850e47795ed3(root);
                    }
                }

                public Samples.SchemaFilesExample2.OtherTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_8846452bd65e4887bb67850e47795ed3(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_8846452bd65e4887bb67850e47795ed3(Samples.SchemaFilesExample2.OtherTable value)
                {
                    checked
                    {

                        int runningSum = 14 + 7;
                        var index0Value = value.name;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_bc792701c7b94bc28c772923e5827662(index0Value);
                        };
                        return runningSum;

                    }
                }

                private static Samples.SchemaFilesExample2.OtherTable Read_8846452bd65e4887bb67850e47795ed3<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_ca88d03d18a34af282eeeb229fa9d5b7<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_ca88d03d18a34af282eeeb229fa9d5b7<TInputBuffer> : Samples.SchemaFilesExample2.OtherTable where TInputBuffer : IInputBuffer
                {
                    private readonly TInputBuffer buffer;
                    private readonly int offset;

                    public tableReader_ca88d03d18a34af282eeeb229fa9d5b7(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.buffer = buffer;
                            this.offset = offset;
                        }
                    }

                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return __ReadIndex0Value(this.buffer, this.offset); }
                        }

                        set
                        {
                            checked
                            { throw new NotMutableException(); }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_bc792701c7b94bc28c772923e5827662(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_8846452bd65e4887bb67850e47795ed3<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    Samples.SchemaFilesExample2.OtherTable value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(11, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[6];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.name;
                        var index0Offset = 0;
                        if (index0Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 11 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_bc792701c7b94bc28c772923e5827662(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_bc792701c7b94bc28c772923e5827662(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_bc792701c7b94bc28c772923e5827662<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_bc792701c7b94bc28c772923e5827662<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Foo : object
        {
            partial void OnInitialized();
            public Foo()
            {
                checked
                { this.OnInitialized(); }
            }

            public Foo(Foo source)
            {
                checked
                {
                    this.id = source.id;
                    this.count = source.count;
                    this.prefix = source.prefix;
                    this.length = source.length;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.UInt64 id { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int16 count { get; set; }
            [FlatBufferItem(2)]
            public virtual System.SByte prefix { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt32 length { get; set; }
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Bar : object
        {
            partial void OnInitialized();
            public Bar()
            {
                checked
                { this.OnInitialized(); }
            }

            public Bar(Bar source)
            {
                checked
                {
                    this.parent = source.parent != null ? new Samples.SchemaFilesExample2.Foo(source.parent) : null;
                    this.time = source.time;
                    this.ratio = source.ratio;
                    this.size = source.size;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::Samples.SchemaFilesExample2.Foo parent { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int32 time { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Single ratio { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt16 size { get; set; }
        }
    }
}
