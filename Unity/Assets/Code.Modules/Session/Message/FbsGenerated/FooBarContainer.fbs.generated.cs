
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 1.0.0.P76fgla2iAar4mYu50w6Xd7gcXDC+dTsKwlinI80XyM=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using FlatSharp;
using FlatSharp.Attributes;
namespace EGameFrame
{
    namespace Message
    {
        [FlatBufferEnum(typeof(System.SByte))]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public enum Fruit : System.SByte
        {
            Apples = (sbyte)(0),
            Pears = (sbyte)(1),
            Bananas = (sbyte)(2),
        }

        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBarContainer : object
        {
            partial void OnInitialized();
            public FooBarContainer()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBarContainer(FooBarContainer source)
            {
                checked
                {
                    this.list = source.list?.Select(x => x != null ? new EGameFrame.Message.FooBar(x) : null).ToList();
                    this.initialized = source.initialized;
                    this.fruit = source.fruit;
                    this.location = source.location;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual IList<global::EGameFrame.Message.FooBar> list { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Boolean initialized { get; set; }
            [FlatBufferItem(2)]
            public virtual global::EGameFrame.Message.Fruit fruit { get; set; }
            [FlatBufferItem(3)]
            public virtual System.String location { get; set; }
            public static ISerializer<EGameFrame.Message.FooBarContainer> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.FooBarContainer

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.FooBarContainer>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.FooBarContainer root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_6c589ee613cc47f8af45ede4796d52e6(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.FooBarContainer root)
                {
                    checked
                    {
                        return GetMaxSizeOf_6c589ee613cc47f8af45ede4796d52e6(root);
                    }
                }

                public EGameFrame.Message.FooBarContainer Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_6c589ee613cc47f8af45ede4796d52e6(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_6c589ee613cc47f8af45ede4796d52e6(EGameFrame.Message.FooBarContainer value)
                {
                    checked
                    {

                        int runningSum = 23 + 13;
                        var index0Value = value.list;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_541d5cd4ecbd475a9591cfd163a00f9c(index0Value);
                        }
                        var index3Value = value.location;

                        if (!object.ReferenceEquals(index3Value, null))
                        {
                            runningSum += GetMaxSizeOf_0830eccefa4d4913a5311430087f5b96(index3Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBarContainer Read_6c589ee613cc47f8af45ede4796d52e6<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_dc30b5ef148e4743987e72c385923f51<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_dc30b5ef148e4743987e72c385923f51<TInputBuffer> : EGameFrame.Message.FooBarContainer where TInputBuffer : IInputBuffer
                {



                    public tableReader_dc30b5ef148e4743987e72c385923f51(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.Collections.Generic.IList<EGameFrame.Message.FooBar> __index0;
                    public override System.Collections.Generic.IList<EGameFrame.Message.FooBar> list
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Collections.Generic.IList<EGameFrame.Message.FooBar> __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Collections.Generic.IList<EGameFrame.Message.FooBar>);
                            }
                            else
                            {
                                return Read_541d5cd4ecbd475a9591cfd163a00f9c(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Boolean __index1;
                    public override System.Boolean initialized
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Boolean __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Boolean);
                            }
                            else
                            {
                                return Read_97daa23cdb7e4daa90cdad135ec7b758(buffer, absoluteLocation);
                            }
                        }
                    }

                    private EGameFrame.Message.Fruit __index2;
                    public override EGameFrame.Message.Fruit fruit
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Fruit __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Fruit);
                            }
                            else
                            {
                                return Read_e70de585099c404b9eebe81e88566fc6(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index3;
                    public override System.String location
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_0830eccefa4d4913a5311430087f5b96(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_6c589ee613cc47f8af45ede4796d52e6<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBarContainer value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(20, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.list;
                        var index0Offset = 0;
                        if (index0Value != default(System.Collections.Generic.IList<EGameFrame.Message.FooBar>))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }

                        var index1Value = value.initialized;
                        var index1Offset = 0;
                        if (index1Value != default(System.Boolean))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 1;

                        }

                        var index2Value = value.fruit;
                        var index2Offset = 0;
                        if (index2Value != default(EGameFrame.Message.Fruit))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 1;

                        }

                        var index3Value = value.location;
                        var index3Offset = 0;
                        if (index3Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 20 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_541d5cd4ecbd475a9591cfd163a00f9c(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_97daa23cdb7e4daa90cdad135ec7b758(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_e70de585099c404b9eebe81e88566fc6(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_0830eccefa4d4913a5311430087f5b96(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_541d5cd4ecbd475a9591cfd163a00f9c(System.Collections.Generic.IList<EGameFrame.Message.FooBar> value)
                {
                    checked
                    {

                        int length = value.Count;
                        int runningSum = 7 + 7;
                        for (int i = 0; i < length; ++i)
                        {
                            var itemTemp = value[i];
                            SerializationHelpers.EnsureNonNull(itemTemp);
                            runningSum += GetMaxSizeOf_79d440b2b0a347cb9f4f856c4f9cdad0(itemTemp);
                        }
                        return runningSum;
                    }
                }

                private static System.Collections.Generic.IList<EGameFrame.Message.FooBar> Read_541d5cd4ecbd475a9591cfd163a00f9c<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (new FlatBufferVector_baf0d9e3dc1f475c9ca29bac489be57b<TInputBuffer>(
                            buffer,
                            offset + buffer.ReadUOffset(offset),
                            4)).FlatBufferVectorToList();
                    }
                }

                public sealed class FlatBufferVector_baf0d9e3dc1f475c9ca29bac489be57b<TInputBuffer> : FlatBufferVector<EGameFrame.Message.FooBar, TInputBuffer>
                    where TInputBuffer : IInputBuffer
                {
                    public FlatBufferVector_baf0d9e3dc1f475c9ca29bac489be57b(
                        TInputBuffer memory,
                        int offset,
                        int itemSize) : base(memory, offset, itemSize)
                    {
                        checked
                        {
                        }
                    }

                    protected override EGameFrame.Message.FooBar ParseItem(TInputBuffer memory, int offset)
                    {
                        checked
                        {
                            return Read_79d440b2b0a347cb9f4f856c4f9cdad0(memory, offset);
                        }
                    }
                }



                private static void WriteInlineValueOf_541d5cd4ecbd475a9591cfd163a00f9c<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Collections.Generic.IList<EGameFrame.Message.FooBar> value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int count = value.Count;
                        int vectorOffset = context.AllocateVector(4, count, 4);
                        spanWriter.WriteUOffset(span, offset, vectorOffset, context);
                        spanWriter.WriteInt(span, count, vectorOffset, context);
                        vectorOffset += sizeof(int);
                        for (int i = 0; i < count; ++i)
                        {
                            var current = value[i];
                            SerializationHelpers.EnsureNonNull(current);
                            WriteInlineValueOf_79d440b2b0a347cb9f4f856c4f9cdad0(spanWriter, span, current, vectorOffset, context);
                            vectorOffset += 4;
                        }
                    }
                }

                private static int GetMaxSizeOf_79d440b2b0a347cb9f4f856c4f9cdad0(EGameFrame.Message.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_0830eccefa4d4913a5311430087f5b96(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBar Read_79d440b2b0a347cb9f4f856c4f9cdad0<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_972f01f122064ba287897ef3b2f2efca<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_972f01f122064ba287897ef3b2f2efca<TInputBuffer> : EGameFrame.Message.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_972f01f122064ba287897ef3b2f2efca(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Bar __index0;
                    public override EGameFrame.Message.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Bar);
                            }
                            else
                            {
                                return Read_7358cdcc21884eb9a8b36ef2770c246a(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_0830eccefa4d4913a5311430087f5b96(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_d6bbfe9e07ef404f9b46d06a1ecad979(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_e9023afd6804460db3c9fef8ebbb69a4(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_79d440b2b0a347cb9f4f856c4f9cdad0<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(EGameFrame.Message.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_7358cdcc21884eb9a8b36ef2770c246a(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_0830eccefa4d4913a5311430087f5b96(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_d6bbfe9e07ef404f9b46d06a1ecad979(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_e9023afd6804460db3c9fef8ebbb69a4(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_7358cdcc21884eb9a8b36ef2770c246a(EGameFrame.Message.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static EGameFrame.Message.Bar Read_7358cdcc21884eb9a8b36ef2770c246a<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_a5fd310b913340979254e38d99fa210a<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_a5fd310b913340979254e38d99fa210a<TInputBuffer> : EGameFrame.Message.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_a5fd310b913340979254e38d99fa210a(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Foo __index0;
                    public override EGameFrame.Message.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_3f60653ae8374e7eb34bb90925056ec3(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_4a3aa328d6dd40c4a76ff53a41dba2d3(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_8b2255ac7f1b40d294d2ebbc2439dba1(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_fbd7cb24071e4b3490f3a74323c8ee09(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_7358cdcc21884eb9a8b36ef2770c246a<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_3f60653ae8374e7eb34bb90925056ec3(spanWriter, span, (value.parent ?? new EGameFrame.Message.Foo()), (0 + offset), context);
                        WriteInlineValueOf_4a3aa328d6dd40c4a76ff53a41dba2d3(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_8b2255ac7f1b40d294d2ebbc2439dba1(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_fbd7cb24071e4b3490f3a74323c8ee09(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_3f60653ae8374e7eb34bb90925056ec3(EGameFrame.Message.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static EGameFrame.Message.Foo Read_3f60653ae8374e7eb34bb90925056ec3<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_f53ac671562f42ccaa24753e2aef0e16<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_f53ac671562f42ccaa24753e2aef0e16<TInputBuffer> : EGameFrame.Message.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_f53ac671562f42ccaa24753e2aef0e16(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_ddc8cb6fa2344ee0af6c24ed363e6087(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_c0722bb9132441d4b4893ec798e947f1(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_81eaca66afdc47bab9fc0b4a05b4f8e4(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_8eb06db2e8ad4d9d989b4012b3f071cb(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_3f60653ae8374e7eb34bb90925056ec3<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_ddc8cb6fa2344ee0af6c24ed363e6087(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_c0722bb9132441d4b4893ec798e947f1(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_81eaca66afdc47bab9fc0b4a05b4f8e4(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_8eb06db2e8ad4d9d989b4012b3f071cb(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_ddc8cb6fa2344ee0af6c24ed363e6087(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_ddc8cb6fa2344ee0af6c24ed363e6087<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_ddc8cb6fa2344ee0af6c24ed363e6087<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_c0722bb9132441d4b4893ec798e947f1(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_c0722bb9132441d4b4893ec798e947f1<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_c0722bb9132441d4b4893ec798e947f1<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_81eaca66afdc47bab9fc0b4a05b4f8e4(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_81eaca66afdc47bab9fc0b4a05b4f8e4<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_81eaca66afdc47bab9fc0b4a05b4f8e4<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_8eb06db2e8ad4d9d989b4012b3f071cb(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_8eb06db2e8ad4d9d989b4012b3f071cb<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_8eb06db2e8ad4d9d989b4012b3f071cb<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_4a3aa328d6dd40c4a76ff53a41dba2d3(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_4a3aa328d6dd40c4a76ff53a41dba2d3<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_4a3aa328d6dd40c4a76ff53a41dba2d3<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_8b2255ac7f1b40d294d2ebbc2439dba1(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_8b2255ac7f1b40d294d2ebbc2439dba1<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_8b2255ac7f1b40d294d2ebbc2439dba1<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_fbd7cb24071e4b3490f3a74323c8ee09(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_fbd7cb24071e4b3490f3a74323c8ee09<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_fbd7cb24071e4b3490f3a74323c8ee09<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_0830eccefa4d4913a5311430087f5b96(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_0830eccefa4d4913a5311430087f5b96<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_0830eccefa4d4913a5311430087f5b96<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_d6bbfe9e07ef404f9b46d06a1ecad979(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_d6bbfe9e07ef404f9b46d06a1ecad979<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_d6bbfe9e07ef404f9b46d06a1ecad979<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_e9023afd6804460db3c9fef8ebbb69a4(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_e9023afd6804460db3c9fef8ebbb69a4<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_e9023afd6804460db3c9fef8ebbb69a4<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_97daa23cdb7e4daa90cdad135ec7b758(System.Boolean value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Boolean Read_97daa23cdb7e4daa90cdad135ec7b758<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadBool(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_97daa23cdb7e4daa90cdad135ec7b758<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Boolean value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteBool(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_e70de585099c404b9eebe81e88566fc6(EGameFrame.Message.Fruit value)
                {
                    checked
                    {
                        return GetMaxSizeOf_81eaca66afdc47bab9fc0b4a05b4f8e4((System.SByte)value);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static EGameFrame.Message.Fruit Read_e70de585099c404b9eebe81e88566fc6<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return (EGameFrame.Message.Fruit)Read_81eaca66afdc47bab9fc0b4a05b4f8e4(buffer, offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_e70de585099c404b9eebe81e88566fc6<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Fruit value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_81eaca66afdc47bab9fc0b4a05b4f8e4(spanWriter, span, (System.SByte)value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class FooBar : object
        {
            partial void OnInitialized();
            public FooBar()
            {
                checked
                { this.OnInitialized(); }
            }

            public FooBar(FooBar source)
            {
                checked
                {
                    this.sibling = source.sibling != null ? new EGameFrame.Message.Bar(source.sibling) : null;
                    this.name = source.name;
                    this.rating = source.rating;
                    this.postfix = source.postfix;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::EGameFrame.Message.Bar sibling { get; set; }
            [FlatBufferItem(1)]
            public virtual System.String name { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Double rating { get; set; }
            [FlatBufferItem(3)]
            public virtual System.Byte postfix { get; set; }
            public static ISerializer<EGameFrame.Message.FooBar> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.FooBar

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.GreedyMutable)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.FooBar>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.FooBar root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_1c093459f36d4dbd89ebbd7b29b11192(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.FooBar root)
                {
                    checked
                    {
                        return GetMaxSizeOf_1c093459f36d4dbd89ebbd7b29b11192(root);
                    }
                }

                public EGameFrame.Message.FooBar Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_1c093459f36d4dbd89ebbd7b29b11192(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_1c093459f36d4dbd89ebbd7b29b11192(EGameFrame.Message.FooBar value)
                {
                    checked
                    {

                        int runningSum = 63 + 13;
                        var index1Value = value.name;

                        if (!object.ReferenceEquals(index1Value, null))
                        {
                            runningSum += GetMaxSizeOf_a065b7d9afc14a678c863d59f1883f63(index1Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.FooBar Read_1c093459f36d4dbd89ebbd7b29b11192<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_4312443c805d4c8fa2454662040f2a25<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_4312443c805d4c8fa2454662040f2a25<TInputBuffer> : EGameFrame.Message.FooBar where TInputBuffer : IInputBuffer
                {



                    public tableReader_4312443c805d4c8fa2454662040f2a25(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Bar __index0;
                    public override EGameFrame.Message.Bar sibling
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Bar __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(EGameFrame.Message.Bar);
                            }
                            else
                            {
                                return Read_bd544bdc114347edad5293491a5d2636(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.String __index1;
                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 1);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_a065b7d9afc14a678c863d59f1883f63(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Double __index2;
                    public override System.Double rating
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Double __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 2);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Double);
                            }
                            else
                            {
                                return Read_3eb0ac572ce14239bfb6a28ff6815c71(buffer, absoluteLocation);
                            }
                        }
                    }

                    private System.Byte __index3;
                    public override System.Byte postfix
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Byte __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 3);
                            if (absoluteLocation == 0)
                            {
                                return default(System.Byte);
                            }
                            else
                            {
                                return Read_452850ae6c7e4f7b93920aae142a327f(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_1c093459f36d4dbd89ebbd7b29b11192<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.FooBar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(60, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[12];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.sibling;
                        var index0Offset = 0;
                        if (index0Value != default(EGameFrame.Message.Bar))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 26;

                        }

                        var index1Value = value.name;
                        var index1Offset = 0;
                        if (index1Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index1Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 6, context);
                            maxVtableIndex = 1;
                            currentOffset += 4;

                        }

                        var index2Value = value.rating;
                        var index2Offset = 0;
                        if (index2Value != default(System.Double))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                            index2Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 8, context);
                            maxVtableIndex = 2;
                            currentOffset += 8;

                        }

                        var index3Value = value.postfix;
                        var index3Offset = 0;
                        if (index3Value != default(System.Byte))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 1);
                            index3Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 10, context);
                            maxVtableIndex = 3;
                            currentOffset += 1;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 60 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_bd544bdc114347edad5293491a5d2636(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }

                        if (index1Offset != 0)
                        {
                            WriteInlineValueOf_a065b7d9afc14a678c863d59f1883f63(
                                spanWriter,
                                span,
                                index1Value,
                                index1Offset,
                                context);

                        }

                        if (index2Offset != 0)
                        {
                            WriteInlineValueOf_3eb0ac572ce14239bfb6a28ff6815c71(
                                spanWriter,
                                span,
                                index2Value,
                                index2Offset,
                                context);

                        }

                        if (index3Offset != 0)
                        {
                            WriteInlineValueOf_452850ae6c7e4f7b93920aae142a327f(
                                spanWriter,
                                span,
                                index3Value,
                                index3Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_bd544bdc114347edad5293491a5d2636(EGameFrame.Message.Bar value)
                {
                    checked
                    {
                        return 33;
                    }
                }

                private static EGameFrame.Message.Bar Read_bd544bdc114347edad5293491a5d2636<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_3459079f3cfb4fd682db67dcdb221cfc<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_3459079f3cfb4fd682db67dcdb221cfc<TInputBuffer> : EGameFrame.Message.Bar where TInputBuffer : IInputBuffer
                {



                    public structReader_3459079f3cfb4fd682db67dcdb221cfc(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private EGameFrame.Message.Foo __index0;
                    public override EGameFrame.Message.Foo parent
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static EGameFrame.Message.Foo __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_bd27c502514142ea82b1b38e9f8349cf(buffer, (offset + 0));
                        }
                    }

                    private System.Int32 __index1;
                    public override System.Int32 time
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int32 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_2ef3353c1dc644b0961341493a6ee93c(buffer, (offset + 16));
                        }
                    }

                    private System.Single __index2;
                    public override System.Single ratio
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Single __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_817d6683d487431aa4b921d02c73eaa4(buffer, (offset + 20));
                        }
                    }

                    private System.UInt16 __index3;
                    public override System.UInt16 size
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt16 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_638720bdab7b471e805bcdbf6b7d968b(buffer, (offset + 24));
                        }
                    }
                }



                private static void WriteInlineValueOf_bd544bdc114347edad5293491a5d2636<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Bar value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_bd27c502514142ea82b1b38e9f8349cf(spanWriter, span, (value.parent ?? new EGameFrame.Message.Foo()), (0 + offset), context);
                        WriteInlineValueOf_2ef3353c1dc644b0961341493a6ee93c(spanWriter, span, (value.time), (16 + offset), context);
                        WriteInlineValueOf_817d6683d487431aa4b921d02c73eaa4(spanWriter, span, (value.ratio), (20 + offset), context);
                        WriteInlineValueOf_638720bdab7b471e805bcdbf6b7d968b(spanWriter, span, (value.size), (24 + offset), context);
                    }
                }

                private static int GetMaxSizeOf_bd27c502514142ea82b1b38e9f8349cf(EGameFrame.Message.Foo value)
                {
                    checked
                    {
                        return 23;
                    }
                }

                private static EGameFrame.Message.Foo Read_bd27c502514142ea82b1b38e9f8349cf<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new structReader_9f2db2d336794c49bc2a806dc0a5e1da<TInputBuffer>(buffer, offset);
                    }
                }

                private sealed class structReader_9f2db2d336794c49bc2a806dc0a5e1da<TInputBuffer> : EGameFrame.Message.Foo where TInputBuffer : IInputBuffer
                {



                    public structReader_9f2db2d336794c49bc2a806dc0a5e1da(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.__index0 = __ReadIndex0Value(buffer, offset);
                            this.__index1 = __ReadIndex1Value(buffer, offset);
                            this.__index2 = __ReadIndex2Value(buffer, offset);
                            this.__index3 = __ReadIndex3Value(buffer, offset);
                        }
                    }

                    private System.UInt64 __index0;
                    public override System.UInt64 id
                    {
                        get
                        {
                            checked
                            { return this.__index0; }
                        }

                        set
                        {
                            checked
                            { this.__index0 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt64 __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_7926592650ee4132830e326300e98b57(buffer, (offset + 0));
                        }
                    }

                    private System.Int16 __index1;
                    public override System.Int16 count
                    {
                        get
                        {
                            checked
                            { return this.__index1; }
                        }

                        set
                        {
                            checked
                            { this.__index1 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.Int16 __ReadIndex1Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_a3e439f684a640c9b3db0f36d31332b8(buffer, (offset + 8));
                        }
                    }

                    private System.SByte __index2;
                    public override System.SByte prefix
                    {
                        get
                        {
                            checked
                            { return this.__index2; }
                        }

                        set
                        {
                            checked
                            { this.__index2 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.SByte __ReadIndex2Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_291e5574d2084964bf0084b955061250(buffer, (offset + 10));
                        }
                    }

                    private System.UInt32 __index3;
                    public override System.UInt32 length
                    {
                        get
                        {
                            checked
                            { return this.__index3; }
                        }

                        set
                        {
                            checked
                            { this.__index3 = value; }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.UInt32 __ReadIndex3Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            return Read_e971d032f9f0494b9ea80db459d94ca7(buffer, (offset + 12));
                        }
                    }
                }



                private static void WriteInlineValueOf_bd27c502514142ea82b1b38e9f8349cf<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.Foo value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_7926592650ee4132830e326300e98b57(spanWriter, span, (value.id), (0 + offset), context);
                        WriteInlineValueOf_a3e439f684a640c9b3db0f36d31332b8(spanWriter, span, (value.count), (8 + offset), context);
                        WriteInlineValueOf_291e5574d2084964bf0084b955061250(spanWriter, span, (value.prefix), (10 + offset), context);
                        WriteInlineValueOf_e971d032f9f0494b9ea80db459d94ca7(spanWriter, span, (value.length), (12 + offset), context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_7926592650ee4132830e326300e98b57(System.UInt64 value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt64 Read_7926592650ee4132830e326300e98b57<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadULong(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_7926592650ee4132830e326300e98b57<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt64 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteULong(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_a3e439f684a640c9b3db0f36d31332b8(System.Int16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int16 Read_a3e439f684a640c9b3db0f36d31332b8<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_a3e439f684a640c9b3db0f36d31332b8<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteShort(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_291e5574d2084964bf0084b955061250(System.SByte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.SByte Read_291e5574d2084964bf0084b955061250<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadSByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_291e5574d2084964bf0084b955061250<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.SByte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteSByte(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_e971d032f9f0494b9ea80db459d94ca7(System.UInt32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt32 Read_e971d032f9f0494b9ea80db459d94ca7<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_e971d032f9f0494b9ea80db459d94ca7<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_2ef3353c1dc644b0961341493a6ee93c(System.Int32 value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Int32 Read_2ef3353c1dc644b0961341493a6ee93c<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadInt(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_2ef3353c1dc644b0961341493a6ee93c<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Int32 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteInt(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_817d6683d487431aa4b921d02c73eaa4(System.Single value)
                {
                    checked
                    {
                        return 7;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Single Read_817d6683d487431aa4b921d02c73eaa4<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadFloat(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_817d6683d487431aa4b921d02c73eaa4<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Single value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteFloat(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_638720bdab7b471e805bcdbf6b7d968b(System.UInt16 value)
                {
                    checked
                    {
                        return 3;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.UInt16 Read_638720bdab7b471e805bcdbf6b7d968b<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadUShort(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_638720bdab7b471e805bcdbf6b7d968b<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.UInt16 value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteUShort(span, value, offset, context);
                    }
                }

                private static int GetMaxSizeOf_a065b7d9afc14a678c863d59f1883f63(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_a065b7d9afc14a678c863d59f1883f63<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_a065b7d9afc14a678c863d59f1883f63<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_3eb0ac572ce14239bfb6a28ff6815c71(System.Double value)
                {
                    checked
                    {
                        return 15;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Double Read_3eb0ac572ce14239bfb6a28ff6815c71<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadDouble(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_3eb0ac572ce14239bfb6a28ff6815c71<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Double value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteDouble(span, value, offset, context);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static int GetMaxSizeOf_452850ae6c7e4f7b93920aae142a327f(System.Byte value)
                {
                    checked
                    {
                        return 1;
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static System.Byte Read_452850ae6c7e4f7b93920aae142a327f<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadByte(offset);
                    }
                }

                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                private static void WriteInlineValueOf_452850ae6c7e4f7b93920aae142a327f<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.Byte value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteByte(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferTable]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class OtherTable : object
        {
            partial void OnInitialized();
            public OtherTable()
            {
                checked
                { this.OnInitialized(); }
            }

            public OtherTable(OtherTable source)
            {
                checked
                {
                    this.name = source.name;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.String name { get; set; }
            public static ISerializer<EGameFrame.Message.OtherTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

            #region Serializer for EGameFrame.Message.OtherTable

            [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.Lazy)]
            private sealed class GeneratedSerializer : IGeneratedSerializer<EGameFrame.Message.OtherTable>
            {

                public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, EGameFrame.Message.OtherTable root, int offset, SerializationContext context)
                    where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        WriteInlineValueOf_64ce2439f94345b69495c5b9a61559dd(writer, target, root, offset, context);
                    }
                }

                public int GetMaxSize(EGameFrame.Message.OtherTable root)
                {
                    checked
                    {
                        return GetMaxSizeOf_64ce2439f94345b69495c5b9a61559dd(root);
                    }
                }

                public EGameFrame.Message.OtherTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                    where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return Read_64ce2439f94345b69495c5b9a61559dd(buffer, offset);
                    }
                }

                private static int GetMaxSizeOf_64ce2439f94345b69495c5b9a61559dd(EGameFrame.Message.OtherTable value)
                {
                    checked
                    {

                        int runningSum = 14 + 7;
                        var index0Value = value.name;

                        if (!object.ReferenceEquals(index0Value, null))
                        {
                            runningSum += GetMaxSizeOf_bb95b953028344879ba3724cb0233a50(index0Value);
                        };
                        return runningSum;

                    }
                }

                private static EGameFrame.Message.OtherTable Read_64ce2439f94345b69495c5b9a61559dd<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return new tableReader_2119693222384889bc4362d19ae1c891<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                    }
                }

                private sealed class tableReader_2119693222384889bc4362d19ae1c891<TInputBuffer> : EGameFrame.Message.OtherTable where TInputBuffer : IInputBuffer
                {
                    private readonly TInputBuffer buffer;
                    private readonly int offset;

                    public tableReader_2119693222384889bc4362d19ae1c891(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            this.buffer = buffer;
                            this.offset = offset;
                        }
                    }

                    public override System.String name
                    {
                        get
                        {
                            checked
                            { return __ReadIndex0Value(this.buffer, this.offset); }
                        }

                        set
                        {
                            checked
                            { throw new NotMutableException(); }
                        }
                    }

                    [MethodImpl(MethodImplOptions.AggressiveInlining)]
                    private static System.String __ReadIndex0Value(TInputBuffer buffer, int offset)
                    {
                        checked
                        {
                            int absoluteLocation = buffer.GetAbsoluteTableFieldLocation(offset, 0);
                            if (absoluteLocation == 0)
                            {
                                return default(System.String);
                            }
                            else
                            {
                                return Read_bb95b953028344879ba3724cb0233a50(buffer, absoluteLocation);
                            }
                        }
                    }
                }



                private static void WriteInlineValueOf_64ce2439f94345b69495c5b9a61559dd<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    EGameFrame.Message.OtherTable value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {

                        int tableStart = context.AllocateSpace(11, sizeof(int));
                        spanWriter.WriteUOffset(span, offset, tableStart, context);
                        int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                        Span<byte> vtable = stackalloc byte[6];
                        int maxVtableIndex = -1;
                        vtable.Clear(); // reset to 0. Random memory from the stack isn't trustworthy.


                        var index0Value = value.name;
                        var index0Offset = 0;
                        if (index0Value != default(System.String))
                        {

                            currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 4);
                            index0Offset = currentOffset;
                            spanWriter.WriteUShort(vtable, (ushort)(currentOffset - tableStart), 4, context);
                            maxVtableIndex = 0;
                            currentOffset += 4;

                        }
                        int tableLength = currentOffset - tableStart;
                        context.Offset -= 11 - tableLength;
                        int vtableLength = 6 + (2 * maxVtableIndex);
                        spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                        spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                        int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                        spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);

                        if (index0Offset != 0)
                        {
                            WriteInlineValueOf_bb95b953028344879ba3724cb0233a50(
                                spanWriter,
                                span,
                                index0Value,
                                index0Offset,
                                context);

                        }
                    }
                }

                private static int GetMaxSizeOf_bb95b953028344879ba3724cb0233a50(System.String value)
                {
                    checked
                    {
                        return SerializationHelpers.GetMaxSize(value);
                    }
                }

                private static System.String Read_bb95b953028344879ba3724cb0233a50<TInputBuffer>(
                    TInputBuffer buffer,
                    int offset) where TInputBuffer : IInputBuffer
                {
                    checked
                    {
                        return buffer.ReadString(offset);
                    }
                }

                private static void WriteInlineValueOf_bb95b953028344879ba3724cb0233a50<TSpanWriter>(
                    TSpanWriter spanWriter,
                    Span<byte> span,
                    System.String value,
                    int offset,
                    SerializationContext context) where TSpanWriter : ISpanWriter
                {
                    checked
                    {
                        spanWriter.WriteString(span, value, offset, context);
                    }
                }
            }

            #endregion
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Foo : object
        {
            partial void OnInitialized();
            public Foo()
            {
                checked
                { this.OnInitialized(); }
            }

            public Foo(Foo source)
            {
                checked
                {
                    this.id = source.id;
                    this.count = source.count;
                    this.prefix = source.prefix;
                    this.length = source.length;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual System.UInt64 id { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int16 count { get; set; }
            [FlatBufferItem(2)]
            public virtual System.SByte prefix { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt32 length { get; set; }
        }
        [FlatBufferStruct]
        [System.Runtime.CompilerServices.CompilerGenerated]
        public partial class Bar : object
        {
            partial void OnInitialized();
            public Bar()
            {
                checked
                { this.OnInitialized(); }
            }

            public Bar(Bar source)
            {
                checked
                {
                    this.parent = source.parent != null ? new EGameFrame.Message.Foo(source.parent) : null;
                    this.time = source.time;
                    this.ratio = source.ratio;
                    this.size = source.size;
                    this.OnInitialized();
                }
            }

            [FlatBufferItem(0)]
            public virtual global::EGameFrame.Message.Foo parent { get; set; }
            [FlatBufferItem(1)]
            public virtual System.Int32 time { get; set; }
            [FlatBufferItem(2)]
            public virtual System.Single ratio { get; set; }
            [FlatBufferItem(3)]
            public virtual System.UInt16 size { get; set; }
        }
    }
}
